<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
								http://www.springframework.org/schema/beans/spring-beans.xsd 
								http://www.springframework.org/schema/security 
								http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!-- 비밀번호 인코더 -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- 인증매니저 customUserDetailsService를 통해 작업 수행(상기 비밀번호 인코더 참조)-->
	<authentication-manager>
		<authentication-provider user-service-ref ="customUserDetailsService">
			<password-encoder ref="bcryptPasswordEncoder"/>
		</authentication-provider>
	</authentication-manager>
     
	<!-- 인증실패 핸들러 -->
	<!-- <beans:bean id="customAuthenticationFailHandler" class="handler.CustomAuthenticationFailHandler"/> -->
      
    
    <!-- 시큐리티 기본 세팅 사용 -->
	<http auto-config='true' use-expressions="true">
     	 
		<!-- 세션 관리 -->
		<session-management>
			<!-- 동일 ID의 세션 최대수가 한 개, 그 이상일 경우는 기존 세션 무효화 -->
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</session-management>
	        
		<!-- 인터셉터 -->
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/user/**" access="permitAll" />
		
		<intercept-url pattern="/explore/**" access="hasAuthority('ROLE_USER')" /> 
		<intercept-url pattern="/member/**" access="hasAuthority('ROLE_USER')" /> 
		<intercept-url pattern="/post/**" access="hasAuthority('ROLE_USER')" />  
		<intercept-url pattern="/main" access="hasAuthority('ROLE_USER')" />  
		
		<intercept-url pattern="/user/loginTest" access="isAnonymous()" />
		
		<!-- 로그인 form 설정 -->		
		<form-login
					login-page="/" 
					login-processing-url="/login-processing"
					default-target-url="/"
					authentication-failure-url="/?error=login"
					username-parameter="email"
					password-parameter="password"
					/>
					
		<!-- 로그아웃 설정 -->
		<!-- 로그아웃 단계 1. 세션 초기화 / 2. SecurityContext초기화 / 3. url redirect -->
		<logout logout-url="/logout" logout-success-url="/?logout=true" invalidate-session="true"/>
		
		   
				
		<access-denied-handler error-page="/access-denied"/>
	</http>

</beans:beans>