<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
								http://www.springframework.org/schema/beans/spring-beans.xsd 
								http://www.springframework.org/schema/security 
								http://www.springframework.org/schema/security/spring-security.xsd">

	<beans:bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	  <authentication-manager>
     	<authentication-provider user-service-ref ="customUserDetailsService">
     		<password-encoder ref="bcryptPasswordEncoder"/>
     	</authentication-provider>
     </authentication-manager>
     <beans:bean id="customAuthenticationFailHandler" class="handler.CustomAuthenticationFailHandler"/>
      
    
     	 <http auto-config='true' use-expressions="true">
     	 
     	    <!-- 세션 관리 -->
        <session-management invalid-session-url="/main">
            <!-- 동일 ID의 세션 최대수가 한 개, 그 이상일 경우는 기존 세션 무효화 -->
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="false" />
        </session-management>

			<intercept-url pattern="/explore/**" access="hasAuthority('ROLE_USER')" /> 
			<intercept-url pattern="/member/**" access="hasAuthority('ROLE_USER')" /> 
			<intercept-url pattern="/user/**" access="hasAuthority('ROLE_USER')" /> 
			<intercept-url pattern="/post/**" access="hasAuthority('ROLE_USER')" />  
			<intercept-url pattern="/main" access="hasAuthority('ROLE_USER')" />  
			<intercept-url pattern="/**" access="permitAll" />
          <intercept-url pattern="/login_view/**" access="isAnonymous()" />
			
			
<!-- 			<session-management invalid-session-url="/user/loginTest">
 				<concurrency-control max-sessions="1" expired-url="/user/loginTest"/>
			</session-management> -->
		<form-login 
				login-page="/" 
				login-processing-url="/login-processing"
				default-target-url="/main"
				username-parameter="email"
				password-parameter="password" 
				authentication-failure-handler-ref="customAuthenticationFailHandler"/>
				
		 		<logout logout-url="/logout" 
                  				logout-success-url="/"/>        
			
			<access-denied-handler error-page="/access-denied"/>
		<csrf />
		
		
	</http>      
<!-- 		
	 <http auto-config='true' use-expressions="true">
	    		<intercept-url pattern="/admin/**" access="hasAuthority('USER_MANAGER')" />
		<security:intercept-url pattern="/manager/**" access="hasAuthority(ROLE_USER)" /> hasRole/hasAuthority 같은뜻 저권한 가지만 사람만 접근가
			<intercept-url pattern="/member/**" access="hasAuthority('ROLE_USER')" /> 인증된 사람만 접근 가능 
			<intercept-url pattern="/user/**" access="hasAuthority('ROLE_USER')" /> 인증된 사람만 접근 가능 
			<intercept-url pattern="/post/**" access="hasAuthority('ROLE_USER')" /> 인증된 사람만 접근 가능 
			
			<intercept-url pattern="/**" access="permitAll" />
		<form-login 
				login-page="/login" 
				login-processing-url="/login-processing"
				default-target-url="/main"
				username-parameter="email"
				password-parameter="password" 
				authentication-failure-url="/login?error=login"/>
				
		
		<access-denied-handler error-page="/access-denied"/>
		<csrf />
	</http> -->
	
	<!-- <http auto-config='true'  use-expressions="true">
		<intercept-url pattern="/user/login" access="permitAll" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
	
		<form-login login-page="/user/login"
			default-target-url="/"
			authentication-failure-url="/login?error"
			always-use-default-target='true'
		/> 
		
		<logout invalidate-session="true" logout-url="/user/logout" logout-success-url="/user/login" />
		<csrf/>
	</http> 
	
	
	<authentication-manager>
	<authentication-provider user-service-ref="AuthService"/>
	</authentication-manager>

	<beans:bean id="AuthService" class="com.faint.service.AuthService">
   	</beans:bean> -->

</beans:beans>